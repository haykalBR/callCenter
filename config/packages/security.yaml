security:
    encoders:
        App\Domain\Membre\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Domain\Membre\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/admin
            anonymous: true
            user_checker: App\Domain\Membre\Security\UserChecker
            provider: app_user_provider
            two_factor:
                auth_form_path: admin_2fa_login    # The route name you have used in the routes.yaml
                check_path: 2fa_login_check  # The route name you have used in the routes.yaml
            guard:
                authenticators:
                    - App\Domain\Membre\Security\LoginAuthenticator
            logout:
                path: admin_app_logout
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

          - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    #     - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
   #      - { path: ^/admin/(2fa|logout), role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
   #      - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

